{"version":3,"file":"records.js","sources":["../../target/wasm-pack/records/index.js"],"sourcesContent":["\nlet wasm;\n\nconst heap = new Array(32);\n\nheap.fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet heap_next = heap.length;\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nlet cachedTextDecoder = new TextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nfunction getCachedStringFromWasm0(ptr, len) {\n    if (ptr === 0) {\n        return getObject(len);\n    } else {\n        return getStringFromWasm0(ptr, len);\n    }\n}\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nlet cachedTextEncoder = new TextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length);\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len);\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nlet cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachegetInt32Memory0;\n}\n/**\n*/\nexport function main_js() {\n    wasm.main_js();\n}\n\nfunction init(module) {\n    if (typeof module === 'undefined') {\n        module = import.meta.url.replace(/\\.js$/, '_bg.wasm');\n    }\n    let result;\n    const imports = {};\n    imports.wbg = {};\n    imports.wbg.__wbg_new_59cb74e423758ede = function() {\n        var ret = new Error();\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_stack_558ba5917b466edd = function(arg0, arg1) {\n        var ret = getObject(arg1).stack;\n        var ptr0 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len0 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len0;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n    };\n    imports.wbg.__wbg_error_4bb6c2a97407129a = function(arg0, arg1) {\n        var v0 = getCachedStringFromWasm0(arg0, arg1);\n    if (arg0 !== 0) { wasm.__wbindgen_free(arg0, arg1); }\n    console.error(v0);\n};\nimports.wbg.__wbindgen_object_drop_ref = function(arg0) {\n    takeObject(arg0);\n};\nimports.wbg.__wbindgen_throw = function(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\nif ((typeof URL === 'function' && module instanceof URL) || typeof module === 'string' || (typeof Request === 'function' && module instanceof Request)) {\n\n    const response = fetch(module);\n    if (typeof WebAssembly.instantiateStreaming === 'function') {\n        result = WebAssembly.instantiateStreaming(response, imports)\n        .catch(e => {\n            return response\n            .then(r => {\n                if (r.headers.get('Content-Type') != 'application/wasm') {\n                    console.warn(\"`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\", e);\n                    return r.arrayBuffer();\n                } else {\n                    throw e;\n                }\n            })\n            .then(bytes => WebAssembly.instantiate(bytes, imports));\n        });\n    } else {\n        result = response\n        .then(r => r.arrayBuffer())\n        .then(bytes => WebAssembly.instantiate(bytes, imports));\n    }\n} else {\n\n    result = WebAssembly.instantiate(module, imports)\n    .then(result => {\n        if (result instanceof WebAssembly.Instance) {\n            return { instance: result, module };\n        } else {\n            return result;\n        }\n    });\n}\nreturn result.then(({instance, module}) => {\n    wasm = instance.exports;\n    init.__wbindgen_wasm_module = module;\n    wasm.__wbindgen_start();\n    return wasm;\n});\n}\n\nexport default init;\n\n"],"names":["wasm","heap","Array","getObject","idx","fill","undefined","push","heap_next","length","takeObject","ret","dropObject","cachedTextDecoder","TextDecoder","ignoreBOM","fatal","decode","cachegetUint8Memory0","getUint8Memory0","buffer","memory","Uint8Array","getStringFromWasm0","ptr","len","subarray","WASM_VECTOR_LEN","cachedTextEncoder","TextEncoder","encodeString","encodeInto","arg","view","buf","encode","set","read","written","cachegetInt32Memory0","getInt32Memory0","Int32Array","init","module","result","import","meta","url","replace","imports","wbg","__wbg_new_59cb74e423758ede","obj","addHeapObject","Error","__wbg_stack_558ba5917b466edd","arg0","arg1","ptr0","malloc","realloc","mem","offset","code","charCodeAt","slice","passStringToWasm0","stack","__wbindgen_malloc","__wbindgen_realloc","len0","__wbg_error_4bb6c2a97407129a","v0","__wbindgen_free","console","error","__wbindgen_object_drop_ref","__wbindgen_throw","URL","Request","response","fetch","WebAssembly","instantiateStreaming","catch","e","then","r","headers","get","warn","arrayBuffer","bytes","instantiate","Instance","instance","exports","__wbindgen_wasm_module","__wbindgen_start"],"mappings":"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"}